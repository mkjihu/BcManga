package de.greenrobot.BcComicdao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import de.greenrobot.BcComicdao.BcHomeData;
import de.greenrobot.BcComicdao.BcImageData;
import de.greenrobot.BcComicdao.BcIndexData;
import de.greenrobot.BcComicdao.BcSortData;

import de.greenrobot.BcComicdao.BcHomeDataDao;
import de.greenrobot.BcComicdao.BcImageDataDao;
import de.greenrobot.BcComicdao.BcIndexDataDao;
import de.greenrobot.BcComicdao.BcSortDataDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bcHomeDataDaoConfig;
    private final DaoConfig bcImageDataDaoConfig;
    private final DaoConfig bcIndexDataDaoConfig;
    private final DaoConfig bcSortDataDaoConfig;

    private final BcHomeDataDao bcHomeDataDao;
    private final BcImageDataDao bcImageDataDao;
    private final BcIndexDataDao bcIndexDataDao;
    private final BcSortDataDao bcSortDataDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bcHomeDataDaoConfig = daoConfigMap.get(BcHomeDataDao.class).clone();
        bcHomeDataDaoConfig.initIdentityScope(type);

        bcImageDataDaoConfig = daoConfigMap.get(BcImageDataDao.class).clone();
        bcImageDataDaoConfig.initIdentityScope(type);

        bcIndexDataDaoConfig = daoConfigMap.get(BcIndexDataDao.class).clone();
        bcIndexDataDaoConfig.initIdentityScope(type);

        bcSortDataDaoConfig = daoConfigMap.get(BcSortDataDao.class).clone();
        bcSortDataDaoConfig.initIdentityScope(type);

        bcHomeDataDao = new BcHomeDataDao(bcHomeDataDaoConfig, this);
        bcImageDataDao = new BcImageDataDao(bcImageDataDaoConfig, this);
        bcIndexDataDao = new BcIndexDataDao(bcIndexDataDaoConfig, this);
        bcSortDataDao = new BcSortDataDao(bcSortDataDaoConfig, this);

        registerDao(BcHomeData.class, bcHomeDataDao);
        registerDao(BcImageData.class, bcImageDataDao);
        registerDao(BcIndexData.class, bcIndexDataDao);
        registerDao(BcSortData.class, bcSortDataDao);
    }
    
    public void clear() {
        bcHomeDataDaoConfig.clearIdentityScope();
        bcImageDataDaoConfig.clearIdentityScope();
        bcIndexDataDaoConfig.clearIdentityScope();
        bcSortDataDaoConfig.clearIdentityScope();
    }

    public BcHomeDataDao getBcHomeDataDao() {
        return bcHomeDataDao;
    }

    public BcImageDataDao getBcImageDataDao() {
        return bcImageDataDao;
    }

    public BcIndexDataDao getBcIndexDataDao() {
        return bcIndexDataDao;
    }

    public BcSortDataDao getBcSortDataDao() {
        return bcSortDataDao;
    }

}
